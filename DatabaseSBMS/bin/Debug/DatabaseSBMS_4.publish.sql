/*
Deployment script for DatabaseSBMS

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DatabaseSBMS"
:setvar DefaultFilePrefix "DatabaseSBMS"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[CustCategory]...';


GO
CREATE TABLE [dbo].[CustCategory] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [name]        NVARCHAR (10) NOT NULL,
    [description] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([name] ASC)
);


GO
PRINT N'Creating [dbo].[Customers]...';


GO
CREATE TABLE [dbo].[Customers] (
    [Id]        INT           IDENTITY (1, 1) NOT NULL,
    [name]      NVARCHAR (50) NOT NULL,
    [NIC]       INT           NOT NULL,
    [birthDate] DATE          NOT NULL,
    [address]   NVARCHAR (50) NOT NULL,
    [phone]     NVARCHAR (50) NOT NULL,
    [cateId]    INT           NOT NULL,
    [genId]     INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([name] ASC)
);


GO
PRINT N'Creating [dbo].[Employees]...';


GO
CREATE TABLE [dbo].[Employees] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [name]        NVARCHAR (50) NOT NULL,
    [NIC]         INT           NOT NULL,
    [birthDate]   DATE          NOT NULL,
    [address]     NVARCHAR (50) NOT NULL,
    [jobTitleId]  INT           NOT NULL,
    [basicSalary] REAL          NOT NULL,
    [genderId]    INT           NOT NULL,
    [note]        NVARCHAR (50) NOT NULL,
    [phone]       NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([name] ASC)
);


GO
PRINT N'Creating [dbo].[Gender]...';


GO
CREATE TABLE [dbo].[Gender] (
    [Id]   INT           NOT NULL,
    [name] NVARCHAR (10) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[JobTitle]...';


GO
CREATE TABLE [dbo].[JobTitle] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [name]        NVARCHAR (50) NOT NULL,
    [description] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([name] ASC)
);


GO
PRINT N'Creating [dbo].[MonyState]...';


GO
CREATE TABLE [dbo].[MonyState] (
    [Id]          INT           NOT NULL,
    [name]        NVARCHAR (10) NOT NULL,
    [description] NVARCHAR (20) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([name] ASC)
);


GO
PRINT N'Creating [dbo].[Permission]...';


GO
CREATE TABLE [dbo].[Permission] (
    [Id]   INT           IDENTITY (1, 1) NOT NULL,
    [name] NVARCHAR (10) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([name] ASC)
);


GO
PRINT N'Creating [dbo].[ProductCategory]...';


GO
CREATE TABLE [dbo].[ProductCategory] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [name]        NVARCHAR (50) NOT NULL,
    [description] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([name] ASC)
);


GO
PRINT N'Creating [dbo].[Products]...';


GO
CREATE TABLE [dbo].[Products] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [barCode]     INT           NOT NULL,
    [name]        NVARCHAR (50) NOT NULL,
    [description] NVARCHAR (50) NOT NULL,
    [unitId]      INT           NOT NULL,
    [cateId]      INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([barCode] ASC),
    UNIQUE NONCLUSTERED ([name] ASC)
);


GO
PRINT N'Creating [dbo].[ProductsDetails]...';


GO
CREATE TABLE [dbo].[ProductsDetails] (
    [Id]             INT  IDENTITY (1, 1) NOT NULL,
    [prodId]         INT  NOT NULL,
    [cost]           REAL NOT NULL,
    [price]          REAL NOT NULL,
    [quantity]       REAL NOT NULL,
    [ProdExpireDate] DATE NOT NULL,
    [storeDate]      DATE NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ProdUnits]...';


GO
CREATE TABLE [dbo].[ProdUnits] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [name]        NVARCHAR (10) NOT NULL,
    [symbole]     NVARCHAR (5)  NOT NULL,
    [subUName]    NVARCHAR (10) NOT NULL,
    [subSymbole]  NVARCHAR (5)  NOT NULL,
    [description] NVARCHAR (50) NOT NULL,
    [rateMB]      INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([name] ASC)
);


GO
PRINT N'Creating [dbo].[PurchaseItems]...';


GO
CREATE TABLE [dbo].[PurchaseItems] (
    [Id]       INT  IDENTITY (1, 1) NOT NULL,
    [purId]    INT  NOT NULL,
    [proddId]  INT  NOT NULL,
    [cost]     REAL NOT NULL,
    [quantity] REAL NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[PurchasesLogs]...';


GO
CREATE TABLE [dbo].[PurchasesLogs] (
    [Id]    INT      IDENTITY (1, 1) NOT NULL,
    [purId] INT      NOT NULL,
    [date]  DATETIME NOT NULL,
    [note]  TEXT     NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[PurchasesOp]...';


GO
CREATE TABLE [dbo].[PurchasesOp] (
    [Id]         INT           IDENTITY (1, 1) NOT NULL,
    [empId]      INT           NOT NULL,
    [suppId]     INT           NOT NULL,
    [total]      REAL          NOT NULL,
    [monStateId] INT           NOT NULL,
    [opDate]     DATETIME      NOT NULL,
    [note]       NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[SalesItems]...';


GO
CREATE TABLE [dbo].[SalesItems] (
    [Id]       INT  IDENTITY (1, 1) NOT NULL,
    [saleId]   INT  NOT NULL,
    [proddId]  INT  NOT NULL,
    [price]    REAL NOT NULL,
    [quantity] REAL NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[SalesLogs]...';


GO
CREATE TABLE [dbo].[SalesLogs] (
    [Id]     INT           IDENTITY (1, 1) NOT NULL,
    [saleId] INT           NOT NULL,
    [date]   DATETIME      NOT NULL,
    [note]   NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[SalesOp]...';


GO
CREATE TABLE [dbo].[SalesOp] (
    [Id]         INT           IDENTITY (1, 1) NOT NULL,
    [empId]      INT           NOT NULL,
    [custId]     INT           NOT NULL,
    [total]      REAL          NOT NULL,
    [monStateId] INT           NOT NULL,
    [opDate]     DATETIME      NOT NULL,
    [note]       NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[SupCategory]...';


GO
CREATE TABLE [dbo].[SupCategory] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [name]        NVARCHAR (10) NOT NULL,
    [description] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([name] ASC)
);


GO
PRINT N'Creating [dbo].[Suppliers]...';


GO
CREATE TABLE [dbo].[Suppliers] (
    [Id]      INT           IDENTITY (1, 1) NOT NULL,
    [cateId]  INT           NOT NULL,
    [name]    NVARCHAR (50) NOT NULL,
    [address] NVARCHAR (50) NOT NULL,
    [phone]   NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([name] ASC)
);


GO
PRINT N'Creating [dbo].[Users]...';


GO
CREATE TABLE [dbo].[Users] (
    [Id]       INT           IDENTITY (1, 1) NOT NULL,
    [name]     NVARCHAR (10) NOT NULL,
    [password] NVARCHAR (10) NOT NULL,
    [empId]    INT           NOT NULL,
    [permId]   INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([name] ASC),
    UNIQUE NONCLUSTERED ([password] ASC)
);


GO
PRINT N'Creating [dbo].[FK_Customers_Category]...';


GO
ALTER TABLE [dbo].[Customers]
    ADD CONSTRAINT [FK_Customers_Category] FOREIGN KEY ([cateId]) REFERENCES [dbo].[CustCategory] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Customers_Gender]...';


GO
ALTER TABLE [dbo].[Customers]
    ADD CONSTRAINT [FK_Customers_Gender] FOREIGN KEY ([genId]) REFERENCES [dbo].[Gender] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Employees_SalesOp]...';


GO
ALTER TABLE [dbo].[Employees]
    ADD CONSTRAINT [FK_Employees_SalesOp] FOREIGN KEY ([jobTitleId]) REFERENCES [dbo].[JobTitle] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Employees_Gender]...';


GO
ALTER TABLE [dbo].[Employees]
    ADD CONSTRAINT [FK_Employees_Gender] FOREIGN KEY ([genderId]) REFERENCES [dbo].[Gender] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Product_Unit]...';


GO
ALTER TABLE [dbo].[Products]
    ADD CONSTRAINT [FK_Product_Unit] FOREIGN KEY ([unitId]) REFERENCES [dbo].[ProdUnits] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Product_Category]...';


GO
ALTER TABLE [dbo].[Products]
    ADD CONSTRAINT [FK_Product_Category] FOREIGN KEY ([cateId]) REFERENCES [dbo].[ProductCategory] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ProductDetails_Products]...';


GO
ALTER TABLE [dbo].[ProductsDetails]
    ADD CONSTRAINT [FK_ProductDetails_Products] FOREIGN KEY ([prodId]) REFERENCES [dbo].[Products] ([Id]);


GO
PRINT N'Creating [dbo].[FK_PurchaseItems_SalesOp]...';


GO
ALTER TABLE [dbo].[PurchaseItems]
    ADD CONSTRAINT [FK_PurchaseItems_SalesOp] FOREIGN KEY ([purId]) REFERENCES [dbo].[PurchasesOp] ([Id]);


GO
PRINT N'Creating [dbo].[FK_PurchaseItems_ProductsDetails]...';


GO
ALTER TABLE [dbo].[PurchaseItems]
    ADD CONSTRAINT [FK_PurchaseItems_ProductsDetails] FOREIGN KEY ([proddId]) REFERENCES [dbo].[ProductsDetails] ([Id]);


GO
PRINT N'Creating [dbo].[FK_PurchasesDates_SalesOp]...';


GO
ALTER TABLE [dbo].[PurchasesLogs]
    ADD CONSTRAINT [FK_PurchasesDates_SalesOp] FOREIGN KEY ([purId]) REFERENCES [dbo].[PurchasesOp] ([Id]);


GO
PRINT N'Creating [dbo].[FK_PurchasesOp_Employees]...';


GO
ALTER TABLE [dbo].[PurchasesOp]
    ADD CONSTRAINT [FK_PurchasesOp_Employees] FOREIGN KEY ([empId]) REFERENCES [dbo].[Employees] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Supplier_Employees]...';


GO
ALTER TABLE [dbo].[PurchasesOp]
    ADD CONSTRAINT [FK_Supplier_Employees] FOREIGN KEY ([suppId]) REFERENCES [dbo].[Suppliers] ([Id]);


GO
PRINT N'Creating [dbo].[FK_SalesItems_SalesOp]...';


GO
ALTER TABLE [dbo].[SalesItems]
    ADD CONSTRAINT [FK_SalesItems_SalesOp] FOREIGN KEY ([saleId]) REFERENCES [dbo].[SalesOp] ([Id]);


GO
PRINT N'Creating [dbo].[FK_SalesItems_ProductsDetails]...';


GO
ALTER TABLE [dbo].[SalesItems]
    ADD CONSTRAINT [FK_SalesItems_ProductsDetails] FOREIGN KEY ([proddId]) REFERENCES [dbo].[ProductsDetails] ([Id]);


GO
PRINT N'Creating [dbo].[FK_SaleDates_SalesOp]...';


GO
ALTER TABLE [dbo].[SalesLogs]
    ADD CONSTRAINT [FK_SaleDates_SalesOp] FOREIGN KEY ([saleId]) REFERENCES [dbo].[SalesOp] ([Id]);


GO
PRINT N'Creating [dbo].[FK_SalesOp_Employees]...';


GO
ALTER TABLE [dbo].[SalesOp]
    ADD CONSTRAINT [FK_SalesOp_Employees] FOREIGN KEY ([empId]) REFERENCES [dbo].[Employees] ([Id]);


GO
PRINT N'Creating [dbo].[FK_SalesOp_Customers]...';


GO
ALTER TABLE [dbo].[SalesOp]
    ADD CONSTRAINT [FK_SalesOp_Customers] FOREIGN KEY ([custId]) REFERENCES [dbo].[Customers] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Suppliers_Category]...';


GO
ALTER TABLE [dbo].[Suppliers]
    ADD CONSTRAINT [FK_Suppliers_Category] FOREIGN KEY ([cateId]) REFERENCES [dbo].[SupCategory] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Users_Emp]...';


GO
ALTER TABLE [dbo].[Users]
    ADD CONSTRAINT [FK_Users_Emp] FOREIGN KEY ([empId]) REFERENCES [dbo].[Employees] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Users_Perm]...';


GO
ALTER TABLE [dbo].[Users]
    ADD CONSTRAINT [FK_Users_Perm] FOREIGN KEY ([permId]) REFERENCES [dbo].[Permission] ([Id]);


GO
PRINT N'Creating [dbo].[AddCustCategory]...';


GO
CREATE PROCEDURE [dbo].[AddCustCategory]
	@name nvarchar(50),
	@description nvarchar(50)
AS
Begin
INSERT INTO [dbo].[CustCategory] (
            [dbo].[CustCategory].[name],
			[dbo].[CustCategory].[description]
			) 
            VALUES (
			@name,
			@description
			)
End
GO
PRINT N'Creating [dbo].[AddCustomer]...';


GO
CREATE PROCEDURE [dbo].[AddCustomer]
	@name nvarchar (50),
	@nic int,
	@birthDate Date,
	@address nvarchar (50),
	@phone nvarchar (50),
	@genId int,
	@cateId int
AS
Begin
INSERT INTO [dbo].[Customers] (
                  [name],
				  [NIC],
				  [birthDate],
				  [address],
				  [phone],
				  [genId],
				  [cateId]
				  )VALUES(
				  @name,
				  @nic,
				  @birthDate,
				  @address,
				  @phone,
				  @genId,
				  @cateId
				  )
End
GO
PRINT N'Creating [dbo].[AddEmployee]...';


GO
CREATE PROCEDURE [dbo].[AddEmployee]
	@name nvarchar(50),
	@NIC int,
	@birthDate Date,
	@address  nvarchar(50),
	@phone nvarchar(50),
	@basicSalary real,
	@genderId int,
	@jobTitleId int,
	@note nvarchar(50)
AS
Begin
INSERT INTO [dbo].[Employees] (
            [dbo].[Employees].[name],
			[dbo].[Employees].[NIC],
			[dbo].[Employees].[birthDate],
			[dbo].[Employees].[address],
			[dbo].[Employees].[phone],
			[dbo].[Employees].[basicSalary],
			[dbo].[Employees].[genderId],
			[dbo].[Employees].[jobTitleId],
			[dbo].[Employees].[note]
            )
			VALUES (
		    @name,
			@NIC,
			@birthDate,
			@address,
			@phone,
			@basicSalary,
			@genderId,
			@jobTitleId,
			@note
			)
End
GO
PRINT N'Creating [dbo].[AddJobT]...';


GO
CREATE PROCEDURE [dbo].[AddJobT]
	@name nvarchar(50),
	@description nvarchar(50)
AS
Begin
INSERT INTO [dbo].JobTitle(
            [dbo].[JobTitle].[name],
			[dbo].[JobTitle].[description]
			) 
            VALUES (
			@name,
			@description
			)
End
GO
PRINT N'Creating [dbo].[AddNewProdQuantity]...';


GO
CREATE PROCEDURE [dbo].[AddNewProdQuantity]
	@prodId int,
	@cost real,
	@price real,
	@quantity real,
	@exDate Date,
	@stDate Date
AS
Begin
INSERT INTO [dbo].[ProductsDetails](
            [prodId],
			[cost],
			[price],
			[quantity],
			[ProdExpireDate],
			[storeDate]
			) 
            VALUES (
			@prodId,
			@cost,
	        @price,
			@quantity,
	        @exDate,
	        @stDate
			);
End
GO
PRINT N'Creating [dbo].[AddProdCategory]...';


GO
CREATE PROCEDURE [dbo].[AddProdCategory]
	@name nvarchar(50),
	@description nvarchar(50)
AS
Begin
INSERT INTO [dbo].[ProductCategory](
            [dbo].[ProductCategory].[name],
			[dbo].[ProductCategory].[description]
			) 
            VALUES (
			@name,
			@description
			)
End
GO
PRINT N'Creating [dbo].[AddProduct]...';


GO
CREATE PROCEDURE [dbo].[AddProduct]
	@barCode int,
	@name nvarchar(50),
	@description nvarchar(50),
	@cateId int,
	@unitId int
AS
Begin
INSERT INTO [dbo].[Products](
			[dbo].[Products].[barCode],
            [dbo].[Products].[name],
			[dbo].[Products].[description],
			[dbo].[Products].[cateId],
			[dbo].[Products].[unitId]
			) 
            VALUES (
	        @barCode,
			@name,
			@description,
	        @cateId,
	        @unitId
			);
End
GO
PRINT N'Creating [dbo].[AddProdUnit]...';


GO
CREATE PROCEDURE [dbo].[AddProdUnit]
    @name NVARCHAR(10) , 
    @symbole NVARCHAR(5), 
    @subUName NVARCHAR(10), 
    @subSymbole NVARCHAR(5), 
    @description NVARCHAR(50),
    @rateMB int
AS
Begin
INSERT INTO [dbo].[ProdUnits](
            [name], 
            [symbole], 
            [subUName], 
            [subSymbole], 
            [description],
            [rateMB]
            )VALUES(
            @name, 
            @symbole, 
            @subUName, 
            @subSymbole, 
            @description,
            @rateMB
            );
End
GO
PRINT N'Creating [dbo].[AddPurchaseItem]...';


GO
CREATE PROCEDURE [dbo].[AddPurchaseItem]
	@purchId int,
	@proddId int,
	@cost real,
	@quantity real
AS
Begin
INSERT INTO [dbo].PurchaseItems(
            [dbo].PurchaseItems.purId,
			[dbo].PurchaseItems.proddId,
			[dbo].PurchaseItems.cost,
			[dbo].PurchaseItems.quantity
			) 
			VALUES (
			@purchId,
			@proddId,
			@cost,
			@quantity
			)
End
GO
PRINT N'Creating [dbo].[AddPurchaseOpLog]...';


GO
CREATE PROCEDURE [dbo].[AddPurchaseOpLog]
    @purchId int,
	@date DateTime,
	@note nvarchar(50)
AS
Begin
INSERT INTO [dbo].[PurchasesLogs](
            [dbo].[PurchasesLogs].purId,
			[dbo].[PurchasesLogs].date,
			[dbo].[PurchasesLogs].note
			) 
			VALUES (
			@purchId,
			@date,
			@note
			)
End
GO
PRINT N'Creating [dbo].[AddSaleItem]...';


GO
CREATE PROCEDURE [dbo].[AddSaleItem]
	@saleId int,
	@proddId int,
	@price real,
	@quantity real
AS
Begin
INSERT INTO [dbo].SalesItems(
            [dbo].SalesItems.saleId,
			[dbo].SalesItems.proddId,
			[dbo].SalesItems.price,
			[dbo].SalesItems.quantity
			) 
			VALUES (
			@saleId,
			@proddId,
			@price,
			@quantity
			)
End
GO
PRINT N'Creating [dbo].[AddSaleOpLog]...';


GO
CREATE PROCEDURE [dbo].[AddSaleOpLog]
    @saleId int,
	@date DateTime,
	@note nvarchar(50)
AS
Begin
INSERT INTO [dbo].[SalesLogs] (
            [dbo].[SalesLogs].saleId,
			[dbo].[SalesLogs].[date],
			[dbo].[SalesLogs].note
			) 
			VALUES (
			@saleId,
			@date,
			@note
			)
End
GO
PRINT N'Creating [dbo].[AddSupolier]...';


GO
CREATE PROCEDURE [dbo].[AddSupolier]
	@name nvarchar (50),
	@address nvarchar (50),
	@phone nvarchar (50),
	@cateId int
AS
Begin
INSERT INTO [dbo].[Suppliers] (
				  [name],
				  [address],
				  [phone],
				  [cateId]
				  )VALUES(
				  @name,
				  @address,
				  @phone,
				  @cateId
				  )
End
GO
PRINT N'Creating [dbo].[AddSuppCategory]...';


GO
CREATE PROCEDURE [dbo].[AddSuppCategory]
	@name nvarchar(50),
	@description nvarchar(50)
AS
Begin
INSERT INTO [dbo].[SupCategory] (
            [dbo].[SupCategory].[name],
			[dbo].[SupCategory].[description]
			) 
            VALUES (
			@name,
			@description
			)
End
GO
PRINT N'Creating [dbo].[AddUser]...';


GO
CREATE PROCEDURE [dbo].[AddUser] 
	@name nchar(10),
	@password nchar(10),
	@empId int,
	@permId int
	
AS
BEGIN
INSERT INTO Users (name,password,empId,permId) VALUES(@name,@password,@empId,@permId)
END
GO
PRINT N'Creating [dbo].[CheckUser]...';


GO
CREATE PROCEDURE [dbo].[CheckUser] @name nchar(10), @password nchar(10)
As
Begin
SELECT [dbo].Users.Id,
       [dbo].Users.name,
       [dbo].Employees.name as EmpName,
       [dbo].Permission.name as Permission,
       [dbo].Users.empId,
       [dbo].Users.permId
FROM [dbo].Users 
INNER JOIN [dbo].Employees ON [dbo].Users.empId = [dbo].Employees.Id
INNER JOIN [dbo].Permission ON [dbo].Users.permId = [dbo].Permission.Id
WHERE [dbo].Users.name = @name AND [dbo].Users.password = @password
End
GO
PRINT N'Creating [dbo].[CreateCustomersTables]...';


GO
CREATE PROCEDURE [dbo].[CreateCustomersTables]
AS
Begin
CREATE TABLE [dbo].[CustCategory]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1), 
    [name] NVARCHAR(10) NOT NULL UNIQUE, 
    [description] NVARCHAR(50) NOT NULL
);
CREATE TABLE [dbo].[Customers]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1), 
    [name] NVARCHAR(50) NOT NULL UNIQUE, 
    [NIC] INT NOT NULL, 
    [birthDate] DATE NOT NULL, 
    [address] NVARCHAR(50) NOT NULL, 
    [phone] NVARCHAR(50) NOT NULL,
    [cateId] INT NOT NULL, 
    [genId] INT NOT NULL,
    CONSTRAINT [FK_Customers_Category] FOREIGN KEY([cateId]) REFERENCES [dbo].[CustCategory] ([Id]),
    CONSTRAINT [FK_Customers_Gender] FOREIGN KEY([genId]) REFERENCES [dbo].[Gender] ([Id])
);
End
GO
PRINT N'Creating [dbo].[CreateEmpTables]...';


GO
CREATE PROCEDURE [dbo].[CreateEmpTables]
AS
Begin
CREATE TABLE [dbo].[JobTitle]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1), 
    [name] NVARCHAR(50) NOT NULL UNIQUE, 
    [description] NVARCHAR(50) NOT NULL
);

CREATE TABLE [dbo].[Employees]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1), 
    [name] NVARCHAR(50) NOT NULL UNIQUE, 
    [NIC] INT NOT NULL, 
    [birthDate] DATE NOT NULL, 
    [address] NVARCHAR(50) NOT NULL, 
    [jobTitleId] INT NOT NULL, 
    [basicSalary] REAL NOT NULL,
    [genderId] INT NOT NULL,
    [phone] NVARCHAR(50) NOT NULL, 
    [note] NVARCHAR(50) NOT NULL,
    CONSTRAINT [FK_Employees_SalesOp] FOREIGN KEY([jobTitleId]) REFERENCES [dbo].[JobTitle] ([Id]),
    CONSTRAINT [FK_Employees_Gender] FOREIGN KEY([genderId]) REFERENCES [dbo].[Gender] ([Id])
);

INSERT INTO [dbo].[JobTitle] ([dbo].[JobTitle].[name],[dbo].[JobTitle].[description]) VALUES ('Owner','Owner');
INSERT INTO [dbo].[Employees] (
            [dbo].[Employees].[name],
            [dbo].[Employees].[NIC],
            [dbo].[Employees].[birthDate],
            [dbo].[Employees].[address],
            [dbo].[Employees].[jobTitleId],
            [dbo].[Employees].[basicSalary],
            [dbo].[Employees].[genderId],
            [dbo].[Employees].[phone],
            [dbo].[Employees].[note]
            )VALUES(
            'Owner',
            1000001,
            '2000-1-1',
            'no place',
            1,
            0,
            1,
            '+967',
            'Owner'
            );
End
GO
PRINT N'Creating [dbo].[CreateGTables]...';


GO

CREATE PROCEDURE [dbo].[CreateGTables]
AS
Begin

CREATE TABLE [dbo].[Gender]
(
	[Id] INT NOT NULL PRIMARY KEY , 
    [name] NVARCHAR(10) NOT NULL
);
CREATE TABLE [dbo].[MonyState]
(
	[Id] INT NOT NULL PRIMARY KEY , 
    [name] NVARCHAR(10) NOT NULL UNIQUE,
	[description] NVARCHAR(20) NOT NULL
);

INSERT INTO [dbo].[Gender] ([dbo].[Gender].Id,[dbo].[Gender].name) VALUES(1,'Male');
INSERT INTO [dbo].[Gender] ([dbo].[Gender].Id,[dbo].[Gender].name) VALUES(2,'Female');

INSERT INTO [dbo].[MonyState]  VALUES(1,'Cash','نقدا');
INSERT INTO [dbo].[MonyState]   VALUES(2,'Later','آجل');
INSERT INTO [dbo].[MonyState]  VALUES(3,'Pay','تم السداد');

End
GO
PRINT N'Creating [dbo].[CreatePurchaseTables]...';


GO
CREATE PROCEDURE [dbo].[CreatePurchaseTables]
	@param1 int = 0,
	@param2 int
AS
Begin
CREATE TABLE [dbo].[PurchasesOp]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	[empId] INT NOT NULL, 
    [suppId] INT NOT NULL, 
    [total] REAL NOT NULL, 
    [monStateId] INT NOT NULL, 
    [opDate] DATETIME NOT NULL, 
    [note] NVARCHAR(50) NOT NULL, 
    CONSTRAINT [FK_PurchasesOp_Employees] FOREIGN KEY([empId]) REFERENCES [dbo].[Employees] ([Id]), 
    CONSTRAINT [FK_Supplier_Employees] FOREIGN KEY([suppId]) REFERENCES [dbo].[Suppliers] ([Id])
)
CREATE TABLE [dbo].[PurchaseItems]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1), 
    [purId] INT NOT NULL, 
    [proddId] INT NOT NULL, 
    [cost] REAL NOT NULL, 
    [quantity] REAL NOT NULL,
    CONSTRAINT [FK_PurchaseItems_SalesOp] FOREIGN KEY([purId]) REFERENCES [dbo].[PurchasesOp] ([Id]),
    CONSTRAINT [FK_PurchaseItems_ProductsDetails] FOREIGN KEY([proddId]) REFERENCES [dbo].[ProductsDetails] ([Id])
)

CREATE TABLE [dbo].[PurchasesLogs]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1), 
    [purId] INT NOT NULL, 
    [date] DATETIME NOT NULL, 
    [note] TEXT NOT NULL,
     CONSTRAINT [FK_PurchasesDates_SalesOp] FOREIGN KEY([purId]) REFERENCES [dbo].[PurchasesOp] ([Id]),
)
End
GO
PRINT N'Creating [dbo].[CreateSalesTables]...';


GO
CREATE PROCEDURE [dbo].[CreateSalesTables]
AS
Begin
CREATE TABLE [dbo].[SalesOp]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1), 
    [empId] INT NOT NULL, 
    [custId] INT NOT NULL, 
    [total] REAL NOT NULL, 
    [monStateId] INT NOT NULL, 
    [opDate] DATETIME NOT NULL, 
    [note] nvarchar(50) NOT NULL,
    CONSTRAINT [FK_SalesOp_Employees] FOREIGN KEY([empId]) REFERENCES [dbo].[Employees] ([Id]),
    CONSTRAINT [FK_SalesOp_Customers] FOREIGN KEY ([custId]) REFERENCES [Customers]([Id])
)
CREATE TABLE [dbo].[SalesLogs]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1), 
    [saleId] INT NOT NULL, 
    [date] DATETIME NOT NULL, 
    [note] NVARCHAR(50) NOT NULL,
    CONSTRAINT [FK_SalesDates_SalesOp] FOREIGN KEY([saleId]) REFERENCES [dbo].[SalesOp] ([Id]),
)
CREATE TABLE [dbo].[SalesItems]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1), 
    [saleId] INT NOT NULL, 
    [proddId] INT NOT NULL,
    [price] REAL NOT NULL, 
    [quantity] REAL NOT NULL, 
    CONSTRAINT [FK_SalesItems_SalesOp] FOREIGN KEY([saleId]) REFERENCES [dbo].[SalesOp] ([Id]),
    CONSTRAINT [FK_SalesItems_ProductsDetails] FOREIGN KEY([proddId]) REFERENCES [dbo].[ProductsDetails] ([Id])
)

End
GO
PRINT N'Creating [dbo].[CreateStoresTables]...';


GO
CREATE PROCEDURE [dbo].[CreateStoresTables]
AS
Begin
CREATE TABLE [dbo].[ProductCategory]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1), 
    [name] NVARCHAR(50) NOT NULL UNIQUE, 
    [description]  NVARCHAR(50) NOT NULL
);
CREATE TABLE [dbo].[ProdUnits]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1), 
    [name] NVARCHAR(10) NOT NULL UNIQUE, 
    [symbole] NVARCHAR(5) NOT NULL, 
    [subUName] NVARCHAR(10) NOT NULL, 
    [subSymbole] NVARCHAR(5) NOT NULL, 
    [description] NVARCHAR(50) NOT NULL,
    [rateMB] INT NOT NULL
);
CREATE TABLE [dbo].[Products]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1), 
    [barCode] INT NOT NULL UNIQUE, 
    [name] NVARCHAR(50) NOT NULL UNIQUE, 
    [description] NVARCHAR(50) NOT NULL, 
    [unitId] INT NOT NULL, 
    [cateId] INT NOT NULL,
    CONSTRAINT [FK_Product_Unit] FOREIGN KEY([unitId]) REFERENCES [dbo].[ProdUnits] ([Id]),
    CONSTRAINT [FK_Product_Category] FOREIGN KEY([cateId]) REFERENCES [dbo].[ProductCategory] ([Id])
);
CREATE TABLE [dbo].[ProductsDetails]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1), 
    [prodId] INT NOT NULL, 
    [cost] REAL NOT NULL, 
    [price] REAL NOT NULL, 
    [quantity] REAL NOT NULL,
    [ProdExpireDate] DATE NOT NULL, 
    [storeDate] DATE NOT NULL,
    CONSTRAINT [FK_ProductDetails_Products] FOREIGN KEY([prodId]) REFERENCES [dbo].[Products] ([Id]),
);

End
GO
PRINT N'Creating [dbo].[CreateSuppliersTables]...';


GO
CREATE PROCEDURE [dbo].[CreateSuppliersTables]
AS
Begin
CREATE TABLE [dbo].[SupCategory]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1), 
    [name] NVARCHAR(10) NOT NULL UNIQUE, 
    [description] NVARCHAR(50) NOT NULL
);
CREATE TABLE [dbo].[Suppliers]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
    [cateId] INT NOT NULL, 
    [name] NVARCHAR(50) NOT NULL UNIQUE, 
    [address] NVARCHAR(50) NOT NULL, 
    [phone] NVARCHAR(50) NOT NULL,
    CONSTRAINT [FK_Suppliers_Category] FOREIGN KEY([cateId]) REFERENCES [dbo].[SupCategory] ([Id])
)
End
GO
PRINT N'Creating [dbo].[CreateUsersTableas]...';


GO
CREATE PROCEDURE [dbo].[CreateUsersTableas]
AS
Begin

CREATE TABLE [dbo].[Permission]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1), 
    [name] NVARCHAR(10) NOT NULL UNIQUE
);
INSERT INTO [dbo].[Permission] ([dbo].[Permission].name)VALUES('Owner');
INSERT INTO [dbo].[Permission] ([dbo].[Permission].name)VALUES('Admin');
INSERT INTO [dbo].[Permission] ([dbo].[Permission].name)VALUES('SaleSt');
INSERT INTO [dbo].[Permission] ([dbo].[Permission].name)VALUES('PurchaseSt');
CREATE TABLE [dbo].[Users]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1), 
    [name] NVARCHAR(10) NOT NULL UNIQUE, 
    [password] NVARCHAR(10) NOT NULL UNIQUE, 
    [empId] INT NOT NULL, 
    [permId] INT NOT NULL,
    CONSTRAINT [FK_Users_Emp] FOREIGN KEY([empId]) REFERENCES [dbo].[Employees] ([Id]),
    CONSTRAINT [FK_Users_Perm] FOREIGN KEY([permId]) REFERENCES [dbo].[Permission] ([Id])
);
INSERT INTO [dbo].[Users] (
            [dbo].[Users].name,
            [dbo].[Users].password,
            [dbo].[Users].empId,
            [dbo].[Users].permId
            )VALUES(
            'Owner',
            'Owner',
            1,1
            );

End
GO
PRINT N'Creating [dbo].[DeleteCustCategory]...';


GO
CREATE PROCEDURE [dbo].[DeleteCustCategory]
	@id int
AS
Begin
DELETE FROM [dbo].[CustCategory] WHERE [Id] = @id;
End
GO
PRINT N'Creating [dbo].[DeleteCustomer]...';


GO
CREATE PROCEDURE [dbo].[DeleteCustomer]
	@id int
AS
Begin
DELETE FROM [dbo].[Customers] WHERE [Id] = @id
End
GO
PRINT N'Creating [dbo].[DeleteEmployee]...';


GO
CREATE PROCEDURE [dbo].[DeleteEmployee]
	@id int
AS
Begin
DELETE FROM [dbo].[Employees] WHERE [dbo].[Employees].[Id] = @id
End
GO
PRINT N'Creating [dbo].[DeleteJobT]...';


GO
CREATE PROCEDURE [dbo].[DeleteJobT]
	@id int
AS
Begin
DELETE FROM [dbo].[JobTitle] WHERE [dbo].[JobTitle].[Id] = @id
End
GO
PRINT N'Creating [dbo].[DeleteProdCategory]...';


GO
CREATE PROCEDURE [dbo].[DeleteProdCategory]
	@id int
AS
Begin
DELETE FROM [dbo].[ProductCategory] WHERE [Id] = @id;
End
GO
PRINT N'Creating [dbo].[DeleteProdQuantity]...';


GO
CREATE PROCEDURE [dbo].[DeleteProdQuantity]
	@id int
AS
Begin
DELETE FROM [dbo].[ProductsDetails] WHERE [Id] = @id
End
GO
PRINT N'Creating [dbo].[DeleteProduct]...';


GO
CREATE PROCEDURE [dbo].[DeleteProduct]
	@id int
AS
Begin
DELETE FROM [dbo].[Products] WHERE [Id] = @id;
End
GO
PRINT N'Creating [dbo].[DeleteProdUnit]...';


GO
CREATE PROCEDURE [dbo].[DeleteProdUnit]
	@id int
AS
Begin
DELETE FROM [dbo].[ProdUnits] WHERE [Id] = @id;
End
GO
PRINT N'Creating [dbo].[DeletePurchaseOp]...';


GO
CREATE PROCEDURE [dbo].[DeletePurchaseOp]
	@id int
AS
Begin
DELETE FROM [dbo].PurchasesOp WHERE [dbo].PurchasesOp.Id=@id
End
GO
PRINT N'Creating [dbo].[DeleteSaleOp]...';


GO
CREATE PROCEDURE [dbo].[DeleteSaleOp]
	@id int
AS
Begin
DELETE FROM [dbo].SalesOp WHERE [dbo].SalesOp.Id=@id
End
GO
PRINT N'Creating [dbo].[DeleteSuppCategory]...';


GO
CREATE PROCEDURE [dbo].[DeleteSuppCategory]
	@id int
AS
Begin
DELETE FROM [dbo].[SupCategory] WHERE [Id] = @id;
End
GO
PRINT N'Creating [dbo].[DeleteSupplier]...';


GO
CREATE PROCEDURE [dbo].[DeleteSupplier]
	@id int
AS
Begin
DELETE FROM [dbo].[Suppliers] WHERE [Id] = @id
End
GO
PRINT N'Creating [dbo].[DeleteUser]...';


GO
CREATE PROCEDURE [dbo].[DeleteUser] @id int
As
Begin
DELETE FROM Users WHERE Id = @id
End
GO
PRINT N'Creating [dbo].[FilterAsProdCategory]...';


GO
CREATE PROCEDURE [dbo].[FilterAsProdCategory]
	@cateId int
AS
Begin
SELECT [dbo].[Products].[Id],
       [dbo].[Products].[barCode],
       [dbo].[Products].[name],
       [dbo].[Products].[description],
       [dbo].[ProductCategory].[name],
       [dbo].[ProdUnits].[name]
FROM [dbo].[Products]
INNER JOIN [dbo].[ProductCategory] ON [dbo].[Products].cateId = [dbo].[ProductCategory].Id
INNER JOIN [dbo].[ProdUnits] ON [dbo].[Products].unitId = [dbo].[ProdUnits].Id
WHERE [dbo].[Products].[cateId] = @cateId
End
GO
PRINT N'Creating [dbo].[FilterCustByCategory]...';


GO
CREATE PROCEDURE [dbo].[FilterCustByCategory]
	@cateId int
AS
Begin
SELECT [dbo].[Customers].[Id],
       [dbo].[Customers].[name],
       [dbo].[Customers].[NIC],
       [dbo].[Customers].[birthDate],
       [dbo].[Customers].[address],
       [dbo].[Customers].[phone],
       [dbo].[Gender].[name],
       [dbo].[CustCategory].[name]
FROM [dbo].[Customers]
INNER JOIN [dbo].[Gender] ON [dbo].[Customers].genId = [dbo].[Gender].Id
INNER JOIN [dbo].[CustCategory] ON [dbo].[Customers].cateId = [dbo].[CustCategory].Id
WHERE [dbo].[CustCategory].[Id] = @cateId;
End
GO
PRINT N'Creating [dbo].[FilterEmpByJTitle]...';


GO
CREATE PROCEDURE [dbo].[FilterEmpByJTitle]
	@jobTitleId int
AS
Begin
SELECT [dbo].[Employees].[Id],
       [dbo].[Employees].[name],
       [dbo].[Employees].[NIC],
       [dbo].[Employees].[birthDate],
       [dbo].[Employees].[address],
       [dbo].[Employees].[phone],
       [dbo].[Employees].[basicSalary],
       [dbo].[Gender].[name] as Gender,
       [dbo].[JobTitle].[name] as JTitle,
       [dbo].[Employees].[note]
FROM [dbo].[Employees]
INNER JOIN [dbo].JobTitle ON [dbo].Employees.jobTitleId = [dbo].JobTitle.Id
INNER JOIN [dbo].Gender ON [dbo].Employees.genderId = [dbo].Gender.Id
WHERE [dbo].[JobTitle].[Id] = @jobTitleId;
End
GO
PRINT N'Creating [dbo].[FilterSuppByCategory]...';


GO
CREATE PROCEDURE [dbo].[FilterSuppByCategory]
	@cateId int
AS
Begin
SELECT [dbo].[Suppliers].[Id],
       [dbo].[Suppliers].[name],
       [dbo].[Suppliers].[address],
       [dbo].[Suppliers].[phone],
       [dbo].[SupCategory].[name]
FROM [dbo].[Suppliers]
INNER JOIN [dbo].[SupCategory] ON [dbo].[Suppliers].cateId = [dbo].[SupCategory].Id
WHERE [dbo].[SupCategory].[Id] = @cateId;
End
GO
PRINT N'Creating [dbo].[GetCustCategories]...';


GO
CREATE PROCEDURE [dbo].[GetCustCategories]
AS
Begin
SELECT * FROM [dbo].CustCategory
End
GO
PRINT N'Creating [dbo].[GetCustomers]...';


GO
CREATE PROCEDURE [dbo].[GetCustomers]
AS
Begin
SELECT [dbo].[Customers].[Id],
       [dbo].[Customers].[name],
       [dbo].[Customers].[NIC],
       [dbo].[Customers].[birthDate],
       [dbo].[Customers].[address],
       [dbo].[Customers].[phone],
       [dbo].[Gender].[name],
       [dbo].[CustCategory].[name]
FROM [dbo].[Customers]
INNER JOIN [dbo].[Gender] ON [dbo].[Customers].genId = [dbo].[Gender].Id
INNER JOIN [dbo].[CustCategory] ON [dbo].[Customers].cateId = [dbo].[CustCategory].Id
End
GO
PRINT N'Creating [dbo].[GetEmployees]...';


GO
CREATE PROCEDURE [dbo].[GetEmployees]
As
Begin
SELECT [dbo].[Employees].[Id],
       [dbo].[Employees].[name],
       [dbo].[Employees].[NIC],
       [dbo].[Employees].[birthDate],
       [dbo].[Employees].[address],
       [dbo].[Employees].[phone],
       [dbo].[Employees].[basicSalary],
       [dbo].[Gender].[name] as Gender,
       [dbo].[JobTitle].[name] as JTitle,
       [dbo].[Employees].[note]
FROM [dbo].[Employees]
INNER JOIN [dbo].[JobTitle] ON [dbo].Employees.jobTitleId = [dbo].[JobTitle].Id
INNER JOIN [dbo].[Gender] ON [dbo].Employees.genderId = [dbo].[Gender].Id
End
GO
PRINT N'Creating [dbo].[GetJobTitles]...';


GO
CREATE PROCEDURE [dbo].[GetJobTitles]
AS
Begin
SELECT * FROM [dbo].[JobTitle]
End
GO
PRINT N'Creating [dbo].[GetPermissions]...';


GO
CREATE PROCEDURE [dbo].[GetPermissions]
AS
Begin
SELECT * FROM [dbo].Permission
End
GO
PRINT N'Creating [dbo].[GetProdCategories]...';


GO
CREATE PROCEDURE [dbo].[GetProdCategories]
AS
Begin
SELECT * FROM [dbo].ProductCategory
End
GO
PRINT N'Creating [dbo].[GetProdDetails]...';


GO
CREATE PROCEDURE [dbo].[GetProdDetails]
	@prodId int
As
Begin
SELECT * FROM [dbo].[ProductsDetails] WHERE [dbo].[ProductsDetails].prodId = @prodId
End
GO
PRINT N'Creating [dbo].[GetProducts]...';


GO
CREATE PROCEDURE [dbo].[GetProducts]
As
Begin
SELECT [dbo].[Products].[Id],
       [dbo].[Products].[barCode],
       [dbo].[Products].[name],
       [dbo].[Products].[description],
       [dbo].[ProductCategory].[name],
       [dbo].[ProdUnits].[name]
FROM [dbo].[Products]
INNER JOIN [dbo].[ProductCategory] ON [dbo].[Products].cateId = [dbo].[ProductCategory].Id
INNER JOIN [dbo].[ProdUnits] ON [dbo].[Products].unitId = [dbo].[ProdUnits].Id
End
GO
PRINT N'Creating [dbo].[GetProdUnits]...';


GO
CREATE PROCEDURE [dbo].[GetProdUnits]
AS
Begin
SELECT * FROM [dbo].ProdUnits
End
GO
PRINT N'Creating [dbo].[GetPurchaseItems]...';


GO
CREATE PROCEDURE [dbo].[GetPurchaseItems]
    @purchId int
AS
Begin
SELECT  [dbo].PurchaseItems.Id,
        [dbo].Products.[name],
        [dbo].PurchaseItems.cost,
        [dbo].PurchaseItems.quantity,
        [dbo].ProductsDetails.ProdExpireDate
FROM [dbo].PurchaseItems 
INNER JOIN [dbo].ProductsDetails ON [dbo].PurchaseItems.proddId = [dbo].ProductsDetails.Id
INNER JOIN [dbo].Products ON [dbo].ProductsDetails.prodId = [dbo].Products.Id
WHERE [dbo].PurchaseItems.purId = @purchId
End
GO
PRINT N'Creating [dbo].[GetPurchaseLogs]...';


GO
CREATE PROCEDURE [dbo].[GetPurchaseLogs]
	@purchId int
AS
Begin
SELECT * FROM [dbo].[PurchasesLogs] WHERE [dbo].[PurchasesLogs].purId = @purchId;
End
GO
PRINT N'Creating [dbo].[GetPurchases]...';


GO
CREATE PROCEDURE [dbo].[GetPurchases]
As
Begin
SELECT [dbo].PurchasesOp.Id,
       [dbo].Suppliers.[name] as SupplyName,
       [dbo].Employees.[name] as EmpName,
       [dbo].MonyState.[name] as MonyState,
       [dbo].PurchasesOp.total as TotalPrice,
       [dbo].PurchasesOp.opDate as OpDate,
       [dbo].PurchasesOp.note as Note
FROM [dbo].PurchasesOp
INNER JOIN [dbo].Employees ON [dbo].PurchasesOp.empId = [dbo].Employees.Id
INNER JOIN [dbo].Suppliers ON [dbo].PurchasesOp.suppId = [dbo].Suppliers.Id
INNER JOIN [dbo].MonyState ON [dbo].PurchasesOp.monStateId = [dbo].MonyState.Id
End
GO
PRINT N'Creating [dbo].[GetSaleItems]...';


GO
CREATE PROCEDURE [dbo].[GetSaleItems] 
      @saleId int
AS
Begin
SELECT  [dbo].SalesItems.Id,
        [dbo].Products.[name],
        [dbo].SalesItems.price,
        [dbo].SalesItems.quantity,
        [dbo].ProductsDetails.ProdExpireDate
FROM [dbo].SalesItems 
INNER JOIN [dbo].ProductsDetails ON [dbo].SalesItems.proddId = [dbo].ProductsDetails.Id
INNER JOIN [dbo].Products ON [dbo].ProductsDetails.prodId = [dbo].Products.Id
WHERE [dbo].SalesItems.saleId = @saleId
End
GO
PRINT N'Creating [dbo].[GetSaleOpLogs]...';


GO
CREATE PROCEDURE [dbo].[GetSaleOpLogs]
	@saleId int
AS
Begin
SELECT * FROM [dbo].[SalesLogs] WHERE [dbo].[SalesLogs].saleId = @saleId;
End
GO
PRINT N'Creating [dbo].[GetSaleProducts]...';


GO
CREATE PROCEDURE [dbo].[GetSaleProducts]
As
Begin
SELECT [dbo].[ProductsDetails].[Id],
       [dbo].[ProductsDetails].[prodId],
       [dbo].[ProductsDetails].[cost],
       [dbo].[ProductsDetails].[price],
       [dbo].[ProductsDetails].[quantity],
       [dbo].[ProductsDetails].[ProdExpireDate],
       [dbo].[ProductsDetails].[storeDate],
       [dbo].[Products].[barCode],
       [dbo].[Products].[name],
       [dbo].[ProdUnits].[name],
       [dbo].[ProductCategory].[name]
FROM [dbo].[ProductsDetails]
INNER JOIN [dbo].[Products] ON [dbo].[ProductsDetails].prodId = [dbo].[Products].Id
INNER JOIN [dbo].[ProdUnits] ON [dbo].[Products].unitId = [dbo].[ProdUnits].Id
INNER JOIN [dbo].[ProductCategory] ON [dbo].[Products].cateId = [dbo].[ProductCategory].Id
End
GO
PRINT N'Creating [dbo].[GetSales]...';


GO
CREATE PROCEDURE [dbo].[GetSales]
As
Begin
SELECT [dbo].SalesOp.Id,
       [dbo].Customers.[name] as CustName,
       [dbo].Employees.[name] as EmpName,
       [dbo].MonyState.[name] as MonyState,
       [dbo].SalesOp.total as TotalPrice,
       [dbo].SalesOp.opDate as OpDate,
       [dbo].SalesOp.note as Note
FROM [dbo].SalesOp
INNER JOIN [dbo].Employees ON [dbo].SalesOp.empId = [dbo].Employees.Id
INNER JOIN [dbo].Customers ON [dbo].SalesOp.custId = [dbo].Customers.Id
INNER JOIN [dbo].MonyState ON [dbo].SalesOp.monStateId = [dbo].MonyState.Id
End
GO
PRINT N'Creating [dbo].[GetSuppCategories]...';


GO
CREATE PROCEDURE [dbo].[GetSuppCategories]
AS
Begin
SELECT * FROM [dbo].SupCategory
End
GO
PRINT N'Creating [dbo].[GetSuppliers]...';


GO
CREATE PROCEDURE [dbo].[GetSuppliers]
AS
Begin
SELECT [dbo].[Suppliers].[Id],
       [dbo].[Suppliers].[name],
       [dbo].[Suppliers].[address],
       [dbo].[Suppliers].[phone],
       [dbo].[SupCategory].[name]
FROM [dbo].[Suppliers]
INNER JOIN [dbo].[SupCategory] ON [dbo].[Suppliers].cateId = [dbo].[SupCategory].Id
End
GO
PRINT N'Creating [dbo].[GetUsers]...';


GO
CREATE PROCEDURE [dbo].[GetUsers]
As
Begin
SELECT [dbo].Users.Id,
       [dbo].Users.name,
       [dbo].Employees.name as EmpName,
       [dbo].Permission.name as Permission,
       [dbo].Users.empId,
       [dbo].Users.permId
FROM [dbo].Users 
INNER JOIN [dbo].Employees ON [dbo].Users.empId = [dbo].Employees.Id
INNER JOIN [dbo].Permission ON [dbo].Users.permId = [dbo].Permission.Id
End
GO
PRINT N'Creating [dbo].[RemovePurchaseItem]...';


GO
CREATE PROCEDURE [dbo].[RemovePurchaseItem]
	@id int
AS
Begin
DELETE FROM [dbo].PurchaseItems WHERE [dbo].PurchaseItems.Id=@id
End
GO
PRINT N'Creating [dbo].[RemoveSaleItem]...';


GO
CREATE PROCEDURE [dbo].[RemoveSaleItem]
	@id int
AS
Begin
DELETE FROM [dbo].SalesItems WHERE [dbo].SalesItems.Id=@id
End
GO
PRINT N'Creating [dbo].[SearchCustomer]...';


GO
CREATE PROCEDURE [dbo].[SearchCustomer]
	@id int,
	@name nvarchar (50)
AS
Begin
SELECT [dbo].[Customers].[Id],
       [dbo].[Customers].[name],
       [dbo].[Customers].[NIC],
       [dbo].[Customers].[birthDate],
       [dbo].[Customers].[address],
       [dbo].[Customers].[phone],
       [dbo].[Gender].[name],
       [dbo].[CustCategory].[name]
FROM [dbo].[Customers]
INNER JOIN [dbo].[Gender] ON [dbo].[Customers].genId = [dbo].[Gender].Id
INNER JOIN [dbo].[CustCategory] ON [dbo].[Customers].cateId = [dbo].[CustCategory].Id
WHERE [dbo].[Customers].[Id] = @id 
OR [dbo].[Customers].[name] LIKE @name+'%'
OR [dbo].[CustCategory].[Id] = @id;
End
GO
PRINT N'Creating [dbo].[SearchEmployee]...';


GO
CREATE PROCEDURE [dbo].[SearchEmployee]
	@id int,
	@name nvarchar(50)
AS
Begin
SELECT [dbo].[Employees].[Id],
       [dbo].[Employees].[name],
       [dbo].[Employees].[NIC],
       [dbo].[Employees].[birthDate],
       [dbo].[Employees].[address],
       [dbo].[Employees].[phone],
       [dbo].[Employees].[basicSalary],
       [dbo].[Gender].[name] as Gender,
       [dbo].[JobTitle].[name] as JTitle,
       [dbo].[Employees].[note]
FROM [dbo].[Employees]
INNER JOIN [dbo].JobTitle ON [dbo].Employees.jobTitleId = [dbo].JobTitle.Id
INNER JOIN [dbo].Gender ON [dbo].Employees.genderId = [dbo].Gender.Id
WHERE [dbo].[Employees].[Id] = @id OR [dbo].[Employees].[name] LIKE @name+'%';
End
GO
PRINT N'Creating [dbo].[SearchProdDetails]...';


GO
CREATE PROCEDURE [dbo].[SearchProdDetails]
	@barCode int,
    @prodId int,
    @cateId int,
	@name nvarchar
As
Begin
SELECT [dbo].[ProductsDetails].[Id],
       [dbo].[ProductsDetails].[prodId],
       [dbo].[ProductsDetails].[cost],
       [dbo].[ProductsDetails].[price],
       [dbo].[ProductsDetails].[quantity],
       [dbo].[ProductsDetails].[ProdExpireDate],
       [dbo].[ProductsDetails].[storeDate],
       [dbo].[Products].[barCode],
       [dbo].[Products].[name],
       [dbo].[ProdUnits].[name],
       [dbo].[ProductCategory].[name]
FROM [dbo].[ProductsDetails]
INNER JOIN [dbo].[Products] ON [dbo].[ProductsDetails].prodId = [dbo].[Products].Id
INNER JOIN [dbo].[ProdUnits] ON [dbo].[Products].unitId = [dbo].[ProdUnits].Id
INNER JOIN [dbo].[ProductCategory] ON [dbo].[Products].cateId = [dbo].[ProductCategory].Id
WHERE [dbo].[Products].barCode= @barCode 
OR [dbo].[ProductsDetails].prodId= @prodId
OR [dbo].[Products].[name] LIKE @name+'%' 
OR [dbo].[ProductCategory].[name] LIKE @name+'%' 
End
GO
PRINT N'Creating [dbo].[SearchProduct]...';


GO
CREATE PROCEDURE [dbo].[SearchProduct]
	@id int,
	@barCode int,
    @name nvarchar(50)
As
Begin
SELECT [dbo].[Products].[Id],
       [dbo].[Products].[barCode],
       [dbo].[Products].[name],
       [dbo].[Products].[description],
       [dbo].[ProductCategory].[name],
       [dbo].[ProdUnits].[name]
FROM [dbo].[Products]
INNER JOIN [dbo].[ProductCategory] ON [dbo].[Products].cateId = [dbo].[ProductCategory].Id
INNER JOIN [dbo].[ProdUnits] ON [dbo].[Products].unitId = [dbo].[ProdUnits].Id
WHERE [dbo].[Products].Id = @id OR [dbo].[Products].barCode = @barCode OR [dbo].[Products].[name] like @name+'%';
End
GO
PRINT N'Creating [dbo].[SearchPurchase]...';


GO
CREATE PROCEDURE [dbo].[SearchPurchase]
	@id int,
	@name nvarchar(50),
    @date DateTime
AS
Begin
SELECT [dbo].PurchasesOp.Id,
       [dbo].Suppliers.[name] as SupplyName,
       [dbo].Employees.[name] as EmpName,
       [dbo].MonyState.[name] as MonyState,
       [dbo].PurchasesOp.total as TotalPrice,
       [dbo].PurchasesOp.opDate as OpDate,
       [dbo].PurchasesOp.note as Note
FROM [dbo].PurchasesOp
INNER JOIN [dbo].Employees ON [dbo].PurchasesOp.empId = [dbo].Employees.Id
INNER JOIN [dbo].Suppliers ON [dbo].PurchasesOp.suppId = [dbo].Suppliers.Id
INNER JOIN [dbo].MonyState ON [dbo].PurchasesOp.monStateId = [dbo].MonyState.Id
WHERE [dbo].PurchasesOp.Id = @id 
OR [dbo].Suppliers.[name] LIKE @name+'%'
OR [dbo].Employees.[name] LIKE @name+'%'
OR [dbo].MonyState.[name] LIKE @name+'%'
OR [dbo].PurchasesOp.opDate = @date
End
GO
PRINT N'Creating [dbo].[SearchSaleOp]...';


GO
CREATE PROCEDURE [dbo].[SearchSaleOp]
	@id int,
	@name nvarchar(50),
    @date DateTime
AS
Begin
SELECT [dbo].SalesOp.Id,
       [dbo].Customers.[name] as CustName,
       [dbo].Employees.[name] as EmpName,
       [dbo].MonyState.[name] as MonyState,
       [dbo].SalesOp.total as TotalPrice,
       [dbo].SalesOp.opDate as OpDate,
       [dbo].SalesOp.note as Note
FROM [dbo].SalesOp
INNER JOIN [dbo].Employees ON [dbo].SalesOp.empId = [dbo].Employees.Id
INNER JOIN [dbo].Customers ON [dbo].SalesOp.custId = [dbo].Customers.Id
INNER JOIN [dbo].MonyState ON [dbo].SalesOp.monStateId = [dbo].MonyState.Id
WHERE [dbo].SalesOp.Id = @id 
OR [dbo].Customers.[name] LIKE @name+'%'
OR [dbo].Employees.[name] LIKE @name+'%'
OR [dbo].MonyState.[name] LIKE @name+'%'
OR [dbo].SalesOp.opDate = @date
End
GO
PRINT N'Creating [dbo].[SearchSupplier]...';


GO
CREATE PROCEDURE [dbo].[SearchSupplier]
	@id int,
	@name nvarchar (50)
AS
Begin
SELECT [dbo].[Suppliers].[Id],
       [dbo].[Suppliers].[name],
       [dbo].[Suppliers].[address],
       [dbo].[Suppliers].[phone],
       [dbo].[SupCategory].[name]
FROM [dbo].[Suppliers]
INNER JOIN [dbo].[SupCategory] ON [dbo].[Suppliers].cateId = [dbo].[SupCategory].Id
WHERE [dbo].[Suppliers].[Id] = @id 
OR [dbo].[Suppliers].[name] LIKE @name+'%';
End
GO
PRINT N'Creating [dbo].[SearchUser]...';


GO
CREATE PROCEDURE [dbo].[SearchUser] @id int, @name nchar(10)
As
Begin
SELECT [dbo].Users.Id,
       [dbo].Users.name,
       [dbo].Employees.name as EmpName,
       [dbo].Permission.name as Permission,
       [dbo].Users.empId,
       [dbo].Users.permId
FROM [dbo].Users 
INNER JOIN [dbo].Employees ON [dbo].Users.empId = [dbo].Employees.Id
INNER JOIN [dbo].Permission ON [dbo].Users.permId = [dbo].Permission.Id
WHERE [dbo].Users.Id = @id OR [dbo].Users.name like @name+'%';
End
GO
PRINT N'Creating [dbo].[UpdateCustCategory]...';


GO
CREATE PROCEDURE [dbo].[UpdateCustCategory]
    @id int,
    @name NVARCHAR(10) , 
    @description NVARCHAR(50)  
AS
Begin
UPDATE [dbo].[CustCategory] SET
             [name] = @name,  
             [description] = @description
       WHERE [Id] = @id;
End
GO
PRINT N'Creating [dbo].[UpdateCustomer]...';


GO
CREATE PROCEDURE [dbo].[UpdateCustomer]
	@id int,
	@name nvarchar (50),
	@nic int,
	@birthDate Date,
	@address nvarchar (50),
	@phone nvarchar (50),
	@genId int,
	@cateId int
AS
Begin
UPDATE [dbo].[Customers] SET
                  [name] = @name,
				  [NIC] = @nic,
				  [birthDate] = @birthDate,
				  [address] = @address,
				  [phone] = @phone,
				  [genId] = @genId,
				  [cateId] = @cateId
			WHERE [Id] = @id
End
GO
PRINT N'Creating [dbo].[UpdateEmployee]...';


GO
CREATE PROCEDURE [dbo].[UpdateEmployee]
	@id int,
	@name nvarchar(50),
	@NIC int,
	@birthDate Date,
	@address  nvarchar(50),
	@phone nvarchar(50),
	@basicSalary real,
	@genderId int,
	@jobTitleId int,
	@note nvarchar(50)
AS
Begin
UPDATE [dbo].Employees SET
            [dbo].Employees.name = @name,
			[dbo].Employees.NIC = @NIC,
			[dbo].Employees.birthDate = @birthDate,
			[dbo].Employees.address = @address,
			[dbo].Employees.phone = @phone,
			[dbo].Employees.basicSalary = @basicSalary,
			[dbo].Employees.genderId = @genderId,
			[dbo].Employees.jobTitleId = @jobTitleId,
			[dbo].Employees.note = @note
	  WHERE [dbo].Employees.Id = @id
End
GO
PRINT N'Creating [dbo].[UpdateJobT]...';


GO
CREATE PROCEDURE [dbo].[UpdateJobT]
	@id int,
	@name nvarchar(50),
	@description nvarchar(50)
AS
Begin
UPDATE [dbo].[JobTitle] SET
            [dbo].[JobTitle].[name] = @name,
			[dbo].[JobTitle].[description] = @description
			WHERE [dbo].[JobTitle].Id = @id
End
GO
PRINT N'Creating [dbo].[UpdateProdCategory]...';


GO
CREATE PROCEDURE [dbo].[UpdateProdCategory]
    @id int,
    @name NVARCHAR(10) , 
    @description NVARCHAR(50)  
AS
Begin
UPDATE [dbo].[ProductCategory] SET
             [name] = @name,  
             [description] = @description
       WHERE [Id] = @id;
End
GO
PRINT N'Creating [dbo].[UpdateProdQuantity]...';


GO
CREATE PROCEDURE [dbo].[UpdateProdQuantity]
	@id int,
	@prodId int,
	@cost real,
	@price real,
	@quantity real,
	@exDate Date,
	@stDate Date
AS
Begin
UPDATE [dbo].[ProductsDetails] SET
            [prodId] = @prodId,
			[cost] = @cost,
			[price] = @price,
			[quantity] =@quantity,
			[ProdExpireDate] = @exDate,
			[storeDate] = @stDate
		WHERE [Id] = @id
End
GO
PRINT N'Creating [dbo].[UpdateProduct]...';


GO
CREATE PROCEDURE [dbo].[UpdateProduct]
    @id int,
    @barCode int,
    @name NVARCHAR(10),
    @description NVARCHAR(50), 
	@cateId int,
	@unitId int
AS
Begin
UPDATE [dbo].[Products] SET
             [barCode] = @barCode,
             [name] = @name, 
             [description] = @description,
             [cateId] = @cateId,
             [unitId] = @unitId
       WHERE [Id] = @id;
End
GO
PRINT N'Creating [dbo].[UpdateProdUnit]...';


GO
CREATE PROCEDURE [dbo].[UpdateProdUnit]
    @id int,
    @name NVARCHAR(10) , 
    @symbole NVARCHAR(5), 
    @subUName NVARCHAR(10), 
    @subSymbole NVARCHAR(5), 
    @description NVARCHAR(50),
    @rateMB int
AS
Begin
UPDATE [dbo].[ProdUnits] SET
             [name] = @name, 
             [symbole] = @symbole, 
             [subUName] = @subUName, 
             [subSymbole] = @subSymbole, 
             [description] = @description,
             [rateMB] = @rateMB
       WHERE [Id] = @id;
End
GO
PRINT N'Creating [dbo].[UpdatePurchaseItem]...';


GO
CREATE PROCEDURE [dbo].[UpdatePurchaseItem]
	@id int,
	@purchId int,
	@proddId int,
	@cost real,
	@quantity real
AS
Begin
UPDATE [dbo].PurchaseItems SET
            [dbo].PurchaseItems.purId = @purchId,
			[dbo].PurchaseItems.proddId = @proddId,
			[dbo].PurchaseItems.cost = @cost,
			[dbo].PurchaseItems.quantity = @quantity
	  WHERE [dbo].PurchaseItems.Id = @id
End
GO
PRINT N'Creating [dbo].[UpdatePurchaseOp]...';


GO
CREATE PROCEDURE [dbo].[UpdatePurchaseOp]
	@id int,
	@empId int,
	@suppId int,
	@total real,
	@monState int,
	@date DateTime,
	@note nvarchar(50)
AS
Begin
Update [dbo].PurchasesOp SET
       [dbo].PurchasesOp.empId=@empId,
	   [dbo].PurchasesOp.suppId=@suppId,
	   [dbo].PurchasesOp.total=@total,
	   [dbo].PurchasesOp.monStateId=@monState,
	   [dbo].PurchasesOp.opDate=@date,
	   [dbo].PurchasesOp.note=@note
 WHERE [dbo].PurchasesOp.Id=@id;
 
EXEC AddPurchaseOpLog @id,@date,@note;
End
GO
PRINT N'Creating [dbo].[UpdateSaleItem]...';


GO
CREATE PROCEDURE [dbo].[UpdateSaleItem]
    @id int,
	@saleId int,
	@proddId int,
	@price int,
	@quantity real
AS
Begin
UPDATE [dbo].SalesItems SET
            [dbo].SalesItems.saleId = @saleId,
			[dbo].SalesItems.proddId = @proddId,
			[dbo].SalesItems.price = @price,
			[dbo].SalesItems.quantity = @quantity
WHERE [dbo].SalesItems.Id = @id;
End
GO
PRINT N'Creating [dbo].[UpdateSaleOp]...';


GO
CREATE PROCEDURE [dbo].[UpdateSaleOp]
	@id int,
	@empId int,
	@custId int,
	@total real,
	@monState int,
	@date DateTime,
	@note nvarchar(50)
AS
Begin
Update [dbo].SalesOp SET
       [dbo].SalesOp.empId=@empId,
	   [dbo].SalesOp.custId=@custId,
	   [dbo].SalesOp.total=@total,
	   [dbo].SalesOp.monStateId=@monState,
	   [dbo].SalesOp.opDate=@date,
	   [dbo].SalesOp.note=@note
 WHERE [dbo].SalesOp.Id=@id;
 EXEC AddSaleOpLog @id,@date,@note;
End
GO
PRINT N'Creating [dbo].[UpdateSuppCategory]...';


GO
CREATE PROCEDURE [dbo].[UpdateSuppCategory]
    @id int,
    @name NVARCHAR(10) , 
    @description NVARCHAR(50)  
AS
Begin
UPDATE [dbo].[SupCategory] SET
             [name] = @name,  
             [description] = @description
       WHERE [Id] = @id;
End
GO
PRINT N'Creating [dbo].[UpdateSupplier]...';


GO
CREATE PROCEDURE [dbo].[UpdateSupplier]
	@id int,
	@name nvarchar (50),
	@address nvarchar (50),
	@phone nvarchar (50),
	@cateId int
AS
Begin
UPDATE [dbo].[Suppliers] SET
				  [name] = @name,
				  [address] = @address,
				  [phone] = @phone,
                  [cateId] = @cateId
			WHERE [Id] = @id
End
GO
PRINT N'Creating [dbo].[UpdateUser]...';


GO
CREATE PROCEDURE [dbo].[UpdateUser] 
	@name nchar(10),
	@password nchar(10),
	@empId int,
	@permId int,
	@id int
AS
BEGIN
	UPDATE Users SET name =@name, password= @password, empId= @empId, permId=@permId WHERE Id=@id
END
GO
PRINT N'Creating [dbo].[AddPurchaseOp]...';


GO
CREATE PROCEDURE [dbo].[AddPurchaseOp]
	@empId int,
	@suppId int,
	@total real,
	@monState int,
	@date DateTime,
	@note nvarchar(50),
	@ID int out
AS
Begin
INSERT INTO [dbo].PurchasesOp(
            [dbo].PurchasesOp.empId,
			[dbo].PurchasesOp.suppId,
            [dbo].SalesOp.total,
			[dbo].PurchasesOp.monStateId,
			[dbo].PurchasesOp.opDate,
			[dbo].PurchasesOp.note
			)
            VALUES (
			@empId,
			@suppId,
			@total,
			@monState,
			@date,
			@note
			);
SET @ID =  IDENT_CURRENT('PurchasesOp');
EXEC AddPurchaseOpLog @ID,@date,@note;
End
GO
PRINT N'Creating [dbo].[AddSaleOp]...';


GO
CREATE PROCEDURE [dbo].[AddSaleOp]
	@empId int,
	@custId int,
	@total real,
	@monStateId int,
	@date DateTime,
	@note nvarchar(50),
    @ID int out
AS
Begin
INSERT INTO [dbo].SalesOp (
            [dbo].SalesOp.empId,
			[dbo].SalesOp.custId,
            [dbo].SalesOp.total,
			[dbo].SalesOp.monStateId,
			[dbo].SalesOp.opDate,
			[dbo].SalesOp.note
			)
            VALUES (
			@empId,
			@custId,
			@total,
			@monStateId,
			@date,
			@note
			);
SET @ID = IDENT_CURRENT('SalesOp');
EXEC AddSaleOpLog @ID,@date,@note;
End
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e98b509b-d6cc-424e-9d8b-4325f67928ea')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e98b509b-d6cc-424e-9d8b-4325f67928ea')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e8eb2752-0d27-4f05-a471-71bf5f758ae1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e8eb2752-0d27-4f05-a471-71bf5f758ae1')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ade33014-c681-4f08-843f-f704e4d51e53')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ade33014-c681-4f08-843f-f704e4d51e53')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'de52daad-faad-4d20-bbc2-e0295e40b777')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('de52daad-faad-4d20-bbc2-e0295e40b777')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e0b01a2f-7d8b-47ac-9783-9362c80892cf')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e0b01a2f-7d8b-47ac-9783-9362c80892cf')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bb63633b-c5f4-4b2a-bd59-4504f39fa620')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bb63633b-c5f4-4b2a-bd59-4504f39fa620')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f836b2cf-7611-4093-bae3-aa7d81cc18e8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f836b2cf-7611-4093-bae3-aa7d81cc18e8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a8aaf009-55ee-47eb-ab91-7dbe12e7020a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a8aaf009-55ee-47eb-ab91-7dbe12e7020a')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
